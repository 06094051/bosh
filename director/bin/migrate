#!/usr/bin/env ruby

require "logger"
require "sequel"
require "director"

config_file = nil

opts = OptionParser.new do |opts|
  opts.on("-c", "--config FILE", "configuration file") do |opt|
    config_file = opt
  end
end

opts.parse!(ARGV.dup)

if config_file.nil?
  puts opts
  exit 1
end

config = YAML.load_file(config_file)
unless config["db"] && config["db"]["database"]
  abort ("Director database config missing from config file")
end

def migrate(database, schema_table, dir, target = nil)
  dir = "\"#{dir}\""
  schema_table = schema_table ? "\"#{schema_table}\"" : "nil"
  target ||= "nil"

  script=<<-EOS
      Sequel.extension :migration
      Sequel::TimestampMigrator.new(DB, #{dir}, :table => #{schema_table},
        :target => #{target}).run
  EOS

  IO.popen("bundle exec sequel -E '#{database}'", :mode => "r+") do |io|
    io.write(script)
    io.close_write
    puts io.read
  end

  exit(1) unless $?.exitstatus == 0
end

migrate(config["db"]["database"], nil, "db/migrations/director")

if config["dns"] && config["dns"]["db"]
  migrate(config["dns"]["db"]["database"], "dns_schema",
          "db/migrations/dns")
end

cpi = config["cloud"]["plugin"]
require_path = File.join("cloud", cpi)
cpi_path = $LOAD_PATH.find { |p| File.exist?(File.join(p, require_path)) }
migrations = File.expand_path("../db/migrations", cpi_path)

if File.directory?(migrations)
  migrate(config["db"]["database"], "#{cpi}_cpi_schema", migrations)
end

