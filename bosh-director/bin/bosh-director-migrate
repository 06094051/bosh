#!/usr/bin/env ruby

require 'logger'
require 'sequel'
require 'bosh/director'
require 'optparse'

config_file = nil

opts = OptionParser.new do |op|
  op.on('-c', '--config FILE', 'configuration file') do |opt|
    config_file = opt
  end
end

opts.parse!(ARGV.dup)

if config_file.nil?
  puts opts
  exit 1
end

config = YAML.load_file(config_file)
unless config['db'] && config['db']['database']
  abort ('Director database config missing from config file')
end

puts 'configure_db'
puts config
db = Bosh::Director::Config.configure_db(config['db'])

def migrate(database, schema_table, dir, target = nil)
  options = {}
  options[:table] = schema_table if schema_table
  options[:target] = target.to_i if target

  Sequel.extension :migration
  $stderr.puts database
  Sequel::TimestampMigrator.new(database, dir, options).run
end

migrations_dir = File.expand_path('../../db/migrations/director', __FILE__)

migrate(db, nil, migrations_dir)

if config['dns'] && config['dns']['db']
  dns_migrations_dir = File.expand_path('../../db/migrations/dns', __FILE__)
  dns_db = Bosh::Director::Config.configure_db(config['dns']['db'])
  migrate(dns_db, 'dns_schema', dns_migrations_dir)
end
